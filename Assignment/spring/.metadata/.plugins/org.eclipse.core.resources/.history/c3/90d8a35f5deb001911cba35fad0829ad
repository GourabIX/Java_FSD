package com.zensar.daos;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 * @author Gourab Sarkar
 * @modification_date 04 Oct 2019 10:08
 * @creation_date 04 Oct 2019 10:24
 * @version 1.0
 * @copyright Gourab Sarkar 2019. All rights reserved.
 * @description This is the product DAO class used in the persistence layer which implements the DAO interface.
 */

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.stereotype.Repository;

import com.zensar.entities.Product;

@Repository
public class ProductDaoImpl implements ProductDao {
	
	@Autowired
	private JdbcTemplate jdbcTemplate;				// JdbcTemplate is a part of Spring DAO model
	// Using autowired Spring will create the object of JdbcTemplate automatically and will inject it into the dependent object (which
	// is ProductDaoImpl object)
	
	@Override
	public List<Product> getAll() {
		String sql = "SELECT * FROM product";			// here 'product' is table name because Spring is not ORM framework 
		return jdbcTemplate.query(sql, new ResultSetExtractor<List<Product>>() {

			@Override
			public List<Product> extractData(ResultSet rs) throws SQLException, DataAccessException {
				List<Product> products = new ArrayList<Product>();
				while (rs.next()) {
					Product product = new Product();
					product.setProductId(rs.getInt("ID"));
					product.setName(rs.getString("name"));
					product.setBrand(rs.getString("brand"));
					product.setPrice(rs.getInt("price"));
					products.add(product);
				}
				return products;
			}
		});
	}

	@Override
	public Product getById(int productId) {
		String sql = "SELECT * FROM product WHERE ID=?";
		return jdbcTemplate.query(sql, new Object[] {productId}, new ResultSetExtractor<T>() {

			@Override
			public T extractData(ResultSet rs) throws SQLException, DataAccessException {
				if (rs.next())
				{
					Product product = new Product();
					product.setProductId(rs.getInt("ID"));
					product.setName(rs.getString("name"));
					product.setBrand(rs.getString("brand"));
					product.setPrice(rs.getInt("price"));
					return product;
				}
				return null;
			}
		});
	}

	@Override
	public void insert(Product product) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void update(Product product) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(Product product) {
		// TODO Auto-generated method stub
		
	}
	
	

}
